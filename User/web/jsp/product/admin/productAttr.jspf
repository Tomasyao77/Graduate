<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<div ng-controller="attr">
    <div class="panel panel-default m-t-lg">
        <div class="panel-heading">
            <h4>属性列表</h4>
            <div class="clearfix">
                <label>
                    <button class="btn btn-success" ng-click="entity._openModal('add')">
                        <span class="icon-plus m-r"></span>新增&nbsp;属性
                    </button>
                </label>
                <form class="form-inline pull-right" ng-submit="page.refreshTo(1)">
                    <label>产品类型&nbsp;
                        <select class="form-control" ng-model="searchType"
                                ng-options="x.id as x.type for x in typeList"
                                ng-change="page.refreshTo(1)">
                        </select>
                    </label>
                    <input class="form-control m-l" type="text" placeholder="名称" ng-model="search">
                    <button class="btn btn-primary" type="submit">
                        <span class="icon-search m-r"></span> 搜索
                    </button>
                </form>
            </div>
        </div>
        <%@ include file="/jsp/common/table.jspf" %>
    </div>
    <%--模态框--%>
    <div entity-modal="modal-attr" title="属性" e="entity">
        <entity-modal-body>
            <div entity-edit-text="attr" type="text" title="名称" entity="entity.entity" e="entity"
                 vld="entity.validate"></div>
            <%--<div class="form-group">
                <label class="col-sm-2 col-sm-offset-2 control-label">角色</label>
                <div class="col-sm-4">
                    <select class="form-control" ng-model="entity.entity.selectRole"
                            ng-options="x.id as x.name for x in adminRoleList"
                            ng-change="selectChange()">
                    </select>
                </div>
            </div>--%>
        </entity-modal-body>
    </div>
</div>
<script>
    m.controller("attr", function ($scope, page, ajax, $location, entity, $filter, alertService) {
        //获取产品类型
        $scope.getProductType = function (callback) {
            ajax.ajax("/user/redirect/trade/product/getProductTypePage", "POST",
                {
                    userId: 1,
                    current: 1,
                    size: 100,
                    orderBy: "create_time",
                    asc: true
                }).success(function (data) {
                console.log(data);
                if (data.success) {
                    $scope.typeList = data.page.list;
                    $scope.searchType = $scope.typeList[0].id;
                    callback && callback();
                }
            });
        };

        $scope.load = function (current, size, orderBy, asc) {
            ajax.ajax("/user/redirect/trade/product/getProductAttrPage", "POST",
                {
                    userId: 1,
                    current: current,
                    size: size,
                    search: $scope.search,
                    orderBy: orderBy,
                    asc: asc,
                    type: $scope.searchType
                }).success(function (data) {
                console.log(data);
                if (data.success) {
                    $scope.page.refreshPage(data);
                }
            });
        };
        $scope.page = page.page($scope.load, "create_time", false);
        $scope.ths = [
            {width: "1%"},
            {
                name: "名称",
                value: function (row) {
                    return row.attr;
                },
                width: "10%"
            },
            /*{
             name: "名称",
             value: function (row) {
             return row.type;
             },
             width: "20%"
             },*/
            {
                name: "创建时间",
                value: function (row) {
                    return $filter("fmtDateYMdHMcn")(row.createTime);
                },
                orderBy: "create_time",
                width: "20%"
            }
        ];
        $scope.operations = [
            {
                name: function () {
                    return "编辑";
                },
                clas: function () {
                    return {
                        "btn btn-xs btn-primary": true
                    };
                },
                click: function (row) {
                    $scope.entity._openModal("edit", row);
                }
            }/*,{
             name: function () {
             return "删除";
             },
             clas: function () {
             return {
             "btn btn-xs btn-danger": true
             };
             },
             click: function (row) {
             if (confirm("确认删除吗？")) {
             /!*ajax.ajax("/server/admin/role/deleteRole", "POST", {
             userId: userId,
             id: row.id
             }).success(function (data) {
             if (data.success) {
             $scope.page.refresh();
             } else {
             alert(data.message);
             }
             });*!/
             }
             }
             }*/
        ];
        /**
         * entity
         */
        $scope.entity = entity.getEntity(
            {attr: ""},
            {attr: {}},
            function (action, row) {//beforeOpen
                if ($scope.entity.action === "add") {

                } else if ($scope.entity.action === "edit") {
                    $scope.entity.entity = angular.copy(row);
                }
            }, function () {//submit
                if ($scope.entity.action === "add") {
                    ajax.ajax("/user/redirect/trade/product/addProductAttr", "POST", {
                        userId: 1,
                        attr: $scope.entity.entity.attr,
                        type: $scope.searchType
                    }).success(function (data) {
                        console.log(data);
                        if (data.success) {
                            alertService.show("操作成功!", "success", "80%");
                            $scope.page.refresh();
                        } else {
                            swal("提示!", "新增失败!名称已存在!", "error");
                        }
                    }).error(function (data) {
                        console.log(data);
                    });
                } else if ($scope.entity.action === "edit") {
                    ajax.ajax("/user/redirect/trade/product/updateProductAttr", "POST", {
                        userId: 1,
                        id: $scope.entity.entity.id,
                        attr: $scope.entity.entity.attr,
                        type: $scope.searchType
                    }).success(function (data) {
                        console.log(data);
                        if (data.success) {
                            alertService.show("操作成功!", "success", "80%");
                            $scope.page.refresh();
                        } else {
                            swal("提示!", "编辑失败!名称已存在!", "error");
                        }
                    }).error(function (data) {
                        console.log(data);
                    });
                }
                $scope.entity._success();//隐藏模态框
            }, "modal-attr");

        $scope.$watch('$viewContentLoaded', function () {
            /*$scope.getProductType();*/
        });

        $scope.$on("onNav", function (e, data) {
            if (data.controller === "attr") {
                $scope.getProductType(function () {
                    $scope.page.refreshTo(1);
                });
            }
        });
    })
</script>