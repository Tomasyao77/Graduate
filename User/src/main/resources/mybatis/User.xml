<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.whut.pocket.user.mapper.UserMapper">
    <!--暂时不使用缓存-->
    <!--<cache eviction="LRU" flushInterval="60000" size="1024" readOnly="true"/>-->

    <resultMap id="getUserRM" type="edu.whut.pocket.user.vo.UserVo">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="openId" column="open_id"/>
        <result property="createTime" column="create_time"/>
        <result property="phone" column="phone"/>
        <result property="name" column="name"/>
        <association property="picture" column="picture" select="edu.whut.pocket.file.mapper.FileMapper.getFile"/>
        <association property="pictureThumb" column="picture_thumb" select="edu.whut.pocket.file.mapper.FileMapper.getFile"/>
    </resultMap>

    <resultMap id="getStoreRM" type="edu.whut.pocket.user.vo.StoreVo">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="createTime" column="create_time"/>
        <result property="sellTotal" column="sell_total"/>
        <result property="storeGoodRatio" column="max_good_ratio"/>
        <result property="storeGrade" column="grade"/>
        <result property="status" column="status"/>
        <result property="storeInviteCode" column="store_invite_code"/>
        <result property="parentInviteCode" column="parent_invite_code"/>
        <result property="isHeadStore" column="is_head_store"/>
        <association property="qrCode" column="qr_code" select="edu.whut.pocket.file.mapper.FileMapper.getFile"/>
        <association property="user" column="user" select="getUser"/>
    </resultMap>

    <resultMap id="getUserVerifyRM" type="edu.whut.pocket.user.vo.UserVerifyVo">
        <id property="id" column="id"/>
        <result property="phone" column="phone"/>
        <result property="name" column="real_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="verify" column="verify"/>
        <result property="storeName" column="store_name"/>
        <result property="region" column="region"/>
        <result property="reason" column="reason"/>
        <result property="parentInviteCode" column="parent_invite_code"/>
        <result property="is_head_store" column="is_head_store"/>
        <result property="store_owen_id" column="store_owen_id"/>
        <result property="remark" column="remark"/>
        <association property="user" column="user_id" select="getUser"/>
        <association property="store" column="store_id" select="getStore"/>
    </resultMap>


    <select id="getUser" resultMap="getUserRM">
		select * from user u where u.id=#{0}
	</select>

    <select id="getUserTwo" resultType="edu.whut.pocket.base.model.User">
        select * from user u where u.id = #{0} and u.phone like "%"#{1}"%"
    </select>

    <select id="findCount" parameterType="string" resultType="int">
        select count(*) from user u where u.phone=#{phone}
    </select>

    <select id="findList" parameterType="string" resultType="edu.whut.pocket.base.model.User">
        select * from user u where u.phone=#{phone}
    </select>

    <select id="findPage" parameterType="hashmap" resultType="edu.whut.pocket.base.model.User">
        select * from user u where u.phone=#{phone} limit #{firstIndex},#{size}
    </select>

    <update id="updateUser" parameterType="hashmap">
        update user u
         <set>
             <if test="phone!=null and phone!=''">
                 u.phone=#{phone},
             </if>
             <if test="name!=null and name!=''">
                 u.name=#{name},
             </if>
         </set>
        where u.id=#{id}
    </update>

    <select id="getStore" parameterType="int" resultMap="getStoreRM">
        select * from store s where s.id=#{0}
    </select>

    <!--用户认证-->
    <select id="getUserVerifyPage" parameterType="hashmap" resultMap="getUserVerifyRM">
        select uv.*,u.id as user_id,s.id as store_id from user_verify uv
        left join user u on u.id=uv.user_id
        left join store s on s.store_invite_code=uv.parent_invite_code
        <where>
            <if test="verify != null and verify >= 0">and uv.verify=#{verify}</if>
            <if test="search != null and search != ''">and uv.real_name like "%"#{search}"%"</if>
        </where>
        order by ${order} limit #{firstIndex},#{size}
    </select>
    <select id="findCountUserVerifyPage" parameterType="hashmap" resultType="int">
        select count(*) from user_verify uv
        left join user u on u.id=uv.user_id
        left join store s on s.store_invite_code=uv.parent_invite_code
        <where>
            <if test="verify != null and verify >= 0">and uv.verify=#{verify}</if>
            <if test="search != null and search != ''">and uv.real_name like "%"#{search}"%"</if>
        </where>
    </select>

    <select id="getStoreDetailByUserId" parameterType="int" resultMap="getUserVerifyRM">
        select uv.*,u.id as user_id,s.id as store_id, store_owen.id as store_owen_id, store_owen.is_head_store from user_verify uv
        left join user u on u.id=uv.user_id
        left join store s on s.store_invite_code=uv.parent_invite_code
        left join store store_owen on store_owen.user = u.id
        where uv.user_id = #{0}
    </select>

    <select id="getUserPhoneByUserId" parameterType="int" resultType="String">
        select phone from user where id = #{userId}
    </select>
</mapper>
